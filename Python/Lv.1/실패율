
# 2019 카카오 블라인드 Recruitment 레벨 1 실패율

def solution(N, stages):
    answer = []
    cnt_clear = []
    cnt_reach = []

    for i in range(0, N+2):
        cnt_clear.append(0)
        cnt_reach.append(0)

    for i in stages:
            cnt_clear[i] += 1

    cnt_reach[N+1] = cnt_clear[N+1]

    // DP와 비슷한 방식으로?
    // Ex) 6 스테이지에 도달한 사람은 현재 6 스테이지에 있는 사람 + 6 스테이지 이상을 클리어 한 사람
    // Ex) 5 스테이지에 도달한 사람은 현재 5 스테이지에 있는 사람 + 5 스테이지 클리어한 사람(해당 부분은 위의 6 스테이지에 도달한 사람과 같음)
    for i in range(N, 0, -1):
        cnt_reach[i] = cnt_clear[i] + cnt_reach[i+1]

    dic = {}
    for i in range(1, N+1):
        dic[i] = cnt_clear[i]/cnt_reach[i] if cnt_reach[i] else 0

    sort_dic = {}
    sort_dic = sorted(dic.items(), key = lambda x : x[1], reverse=True)


    for i in range(len(sort_dic)):
        answer.append(int(sort_dic[i][0]))

    return answer

print(solution(5, [2, 1, 2, 6, 2, 4, 3, 3]))
print(solution(5, [4,4,4,4]))
