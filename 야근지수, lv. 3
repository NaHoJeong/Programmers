// 야근지수, lv. 3
// 우선순위 큐

// 각 시간의 제곱이므로 최댓값을 낮추는게 중요
// for문을 이용해 최댓값을 찾고 해당 값에 -1 --> 시간초과이므로 우선순위큐를 이용해 시간 단축
#include <string>
#include <vector>
#include <queue>

using namespace std;

long long solution(int n, vector<int> works) {
    long long answer = 0;
    priority_queue<int> pq;
    
    for(int i = 0 ; i < works.size() ; i++)
        pq.push(works[i]);
    int temp = 0;
    while(n > 0)
    {
        temp = pq.top() - 1;
        pq.pop();
        if(temp < 0) // 가장 큰 값이 음수면 모든 값이 0
            break;
        pq.push(temp);
        n--;
    }
    
    // 야근 지수 계산
    while(!pq.empty())
    {
        answer += pq.top() * pq.top();
        pq.pop();
    }
    
    return answer;
}
