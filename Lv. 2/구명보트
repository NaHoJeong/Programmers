// 구명보트
// 사람의 몸무게를 오름차순으로 정리한 뒤, 가장 가벼운 사람을 가장 무거운 사람부터 차례대로 합하여 비교
  // 만약 가능하면 그대로 보트에, 안되면 또 그대로 보트에, 그 후, 가장 가벼운 사람을 나타내는 인덱스에 +1

#include <vector>
#include <algorithm>

using namespace std;

int solution(vector<int> people, int limit) {
    int answer = 0;
    sort(people.rbegin(), people.rend());

    int num = 0; // 현재까지 보트에 탄 사람 수(전체 사람 수와 같으면 종료)
    int sum = 0; // 보트에 탈 사람의 몸무게
    int idx = 1; // 무거운 사람을 나타내는 인덱스
    int start = 0; // 가벼운 사람을 나타내는 인덱스
    
    while(num < people.size())
    {
        sum = people[start]; // 가장 가벼운 사람은 항상 보트에 탑승 가능
        num++; // 보트에 탄 사람 수(가벼운 사람은 항상 보트에 탑승할 수 있으므로)
        
        // 무거운 사람과 가벼운 사람이 보트에 탈 수 있다면 같이 탑승
          // 현재 남아 있는 사람 중 가장 무거운 사람은 현재 남아있는 사람 중 가장 가벼운 사람이랑만 탑승 가능
          // 몸무게 초과로 못 탈 경우, 그냥 혼자 타야함 
        if(sum + people[people.size() - idx] <= limit)
        {
            idx++;
            num++;
        }
        start++; // 가장 가벼운 사람은 보트에 탔으므로 다음 가벼운 사람을 나타내는 
        answer++; // 필요한 보트 수 추가
    }
    
    return answer;
}
