// 네트워크, lv. 3
// bfs
#include <string>
#include <vector>
#include <iostream>
#include <queue>

using namespace std;

int solution(int n, vector<vector<int>> computers) {
    int answer = 0;
    vector<int> visit(n, 0);
    queue<int> qu;
    
    qu.push(0);
    visit[0] = 1;
    
    int cnt = 0;
    // 0번 노드부터 시작
    // queue의 front에 있는 수와 연결되어 있는지
    while(1)
    {
        answer++;
        cnt++;
        // 각 네트워크와 연결된 노드 탐색
        while(!qu.empty())
        {
            for(int i = 1 ; i < n ; i++)
            {
                if(visit[i] == 0 && computers[qu.front()][i] == 1)
                {
                    visit[i] = 1;
                    cnt++;
                    qu.push(i);
                }
            }
            qu.pop();
        }
        // 모든 노드 탐색 시 종료
        if(cnt == n)
            break;
        // 어느 하나의 네트워크를 탐색했으면 탐색되지 않은 노드를 위주로 네트워크 탐색
        for(int i = 0 ; i < n ; i++)
        {
            if(visit[i] == 0)
            {
                visit[i] = 1;
                qu.push(i);
                break;
            }
        }
    }
    return answer;
}
